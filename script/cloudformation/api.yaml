AWSTemplateFormatVersion: "2010-09-09"
Description: Network resource
Resources:
  # VPC 설정
  APIVpc:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsHostnames: true
      EnableDnsSupport: true
      InstanceTenancy: default
      Tags:
        - Key: Name
          Value: APIVpc

  # subnet 설정
  ## public 1a.1c private 1a,1c
  APISubnetPrivate1A:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.0.8.0/24
      VpcId:
        Ref: APIVpc
      AvailabilityZone: 
        Fn::Select: 
          - 0
          - Fn::GetAZs: ""
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: API-subnet-private-1a
        - Key: Type
          Value: Isolated
  APISubnetPrivate1C:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.0.9.0/24
      VpcId:
        Ref: APIVpc
      AvailabilityZone: 
        Fn::Select: 
          - 1
          - Fn::GetAZs: ""
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: API-subnet-private-1c
        - Key: Type
          Value: Isolated

  APISubnetPublic1A:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.0.0.0/24
      VpcId:
        Ref: APIVpc
      AvailabilityZone: 
        Fn::Select: 
          - 0
          - Fn::GetAZs: ""
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: API-subnet-public-1a
        - Key: Type
          Value: Public
  APISubnetPublic1C:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.0.1.0/24
      VpcId:
        Ref: APIVpc
      AvailabilityZone: 
        Fn::Select: 
          - 1
          - Fn::GetAZs: ""
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: API-subnet-public-1c
        - Key: Type
          Value: Public

  # 인터넷 게이트웨이 생성
  APIIgw:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: API-igw
  APIVpcgwAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId:
        Ref: APIVpc
      InternetGatewayId:
        Ref: APIIgw

  #NAT 게이트웨이 생성
  APINatGatewayEIP:
    Type: AWS::EC2::EIP
    Properties:
      Domain : vpc

  APINatGateway:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationID: !GetAtt APINatGatewayEIP.AllocationId
      SubnetId: !Ref APISubnetPublic1A

  # 라우팅 테이블
  ## public routing table, private routing table
  APIPublicrtb:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: 
        Ref: APIVpc
      Tags:
        - Key: Name
          Value: API-public-rtb

  APIPublicRoute:
    Type: AWS::EC2::Route
    DependsOn: APIVpcgwAttachment
    Properties:
      RouteTableId:
        Ref: APIPublicrtb
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: 
        Ref: APIIgw

  APISubnetPublic1ARouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: APIPublicrtb
      SubnetId:
        Ref: APISubnetPublic1A
  APISubnetPublic1CRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: APIPublicrtb
      SubnetId:
        Ref: APISubnetPublic1C

  APIPrivatertb:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: 
        Ref: APIVpc
      Tags:
        - Key: Name
          Value: API-private-rtb
  
  APIPrivatertbRoute:
    Type: AWS::EC2::Route
    DependsOn: APIVpcgwAttachment
    Properties:
      RouteTableId: !Ref APIPrivatertb
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref APINatGateway
 
  APISubnetPrivate1ARouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref APISubnetPrivate1A
      RouteTableId: !Ref APIPrivatertb

  APISubnetPrivate1CRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref APISubnetPrivate1C
      RouteTableId: !Ref APIPrivatertb

  # 보안 그룹
  ## was sg, load balancer sg
  APIWASSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: WAS Security Group
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          Description: Allow all outbound traffic 
          IpProtocol: "-1"
      SecurityGroupIngress:
        - CidrIp: 0.0.0.0/0
          Description: from 0.0.0.0/0:8080
          FromPort: 8080
          IpProtocol: tcp
          ToPort: 8080
      Tags:
        - Key: Name
          Value: API-WAS-sg
      VpcId:
        Ref: APIVpc
  
  LoadBalancerSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: LoadBalancer Security Group
      Security
